apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:konnectivity-server
  labels:
    kubernetes.io/cluster-service: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:konnectivity-server
---
apiVersion: v1
kind: Service
metadata:
  name: konnectivity-server
  namespace: kube-system
spec:
  selector:
    k8s-app: konnectivity-server
  clusterIP: None
  ports:
    - protocol: TCP
      port: 8091
      targetPort: 8091
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: konnectivity-server
  namespace: kube-system
  name: konnectivity-server
spec:
  selector:
    matchLabels:
      k8s-app: konnectivity-server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: konnectivity-server
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - operator: "Exists"
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      hostNetwork: true
      securityContext:
        runAsUser: 1002
        runAsGroup: 1000
      containers:
      - name: konnectivity-server-container
        image: gcr.io/k8s-staging-kas-network-proxy/proxy-server:master
        resources:
          requests:
            cpu: 1m
        command: [ "/proxy-server"]
        args: [
          "--log-file=/var/log/konnectivity-server.log",
          "--logtostderr=true",
          "--log-file-max-size=0",
          "--uds-name=/etc/srv/kubernetes/konnectivity-server/konnectivity-server.socket",
          "--cluster-cert=/etc/srv/kubernetes/pki/apiserver.crt",
          "--cluster-key=/etc/srv/kubernetes/pki/apiserver.key",
          "--server-port=0",
          "--agent-port=8091",
          "--health-port=8092",
          "--admin-port=8093",
          "--keepalive-time=1h",
          "--mode=grpc",
          "--agent-namespace=kube-system",
          "--agent-service-account=konnectivity-agent",
          "--kubeconfig=/etc/srv/kubernetes/admin.conf",
          "--authentication-audience=system:konnectivity-server",
          ]
        livenessProbe:
          httpGet:
            scheme: HTTP
            host: 127.0.0.1
            port: 8092
            path: /healthz
          initialDelaySeconds: 10
          timeoutSeconds: 60
        ports:
        - name: serverport
          containerPort: 8090
          hostPort: 8090
        - name: agentport
          containerPort: 8091
          hostPort: 8091
        - name: healthport
          containerPort: 8092
          hostPort: 8092
        - name: adminport
          containerPort: 8093
          hostPort: 8093
        volumeMounts:
        - name: varlogkonnectivityserver
          mountPath: /var/log/konnectivity-server.log
          readOnly: false
        - name: konnectivity-home
          mountPath: /etc/srv/kubernetes/konnectivity-server
        - name: pki
          mountPath: /etc/srv/kubernetes/pki
          readOnly: true
        - name: kubeconfig
          mountPath: /etc/srv/kubernetes/admin.conf
          readOnly: true
      volumes:
      - name: varlogkonnectivityserver
        hostPath:
          path: /var/log/konnectivity-server.log
          type: FileOrCreate
      - name: pki
        hostPath:
          path: /etc/srv/kubernetes/pki
          type: DirectoryOrCreate
      - name: kubeconfig
        hostPath:
          path: /etc/srv/kubernetes/admin.conf
          type: FileOrCreate
      - name: konnectivity-home
        hostPath:
          path: /etc/srv/kubernetes/konnectivity-server
          type: DirectoryOrCreate
